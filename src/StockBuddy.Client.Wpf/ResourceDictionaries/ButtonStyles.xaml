<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:misc="clr-namespace:StockBuddy.Client.Shared.Misc;assembly=StockBuddy.Client.Shared">

    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Styles for buttons only containing an image as their content -->
    <Style x:Key="ImageButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.95" ScaleY="0.95" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Width="50" Height="50" Source="{StaticResource BackImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Styles for rectangular buttons -->
    <Style x:Key="StandardButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="MinWidth" Value="230" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource GradientButtonBackgroundBrush}"
                            BorderBrush="{StaticResource GradientButtonBorderBrush}"
                            BorderThickness="1"
                            Padding="15,6"
                            x:Name="border">

                        <TextBlock Style="{StaticResource StandardTextBlockStyle}"
                                   Text="{TemplateBinding Content}"
                                   Foreground="{StaticResource GradientButtonForegroundBrush}"
                                   FontSize="18"
                                   HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GradientButtonHighlightBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GradientButtonHighlightBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SmallButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="MinWidth" Value="35" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Gainsboro"
                            BorderThickness="1"
                            Opacity="0.8"
                            Padding="3">
                        
                        <TextBlock Style="{StaticResource ColoredTextBlockStyle}"
                                   Text="{TemplateBinding Content}"
                                   FontSize="11"
                                   FontWeight="Bold"
                                   HorizontalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Style for menu buttons -->
    <Style x:Key="MenuButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="#963107"
                            BorderThickness="0"
                            Padding="15,4"
                            Margin="2,0,0,0">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter VerticalAlignment="Center" 
                                              Margin="0,0,8,0" 
                                              Width="22" Height="22" />
                            
                            <TextBlock Style="{StaticResource StandardTextBlockStyle}" 
                                       Text="{TemplateBinding Content}"
                                       Foreground="White"
                                       VerticalAlignment="Center"
                                       FontSize="11" />
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#B53D09" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StockSplitsMenuButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Source="{StaticResource SplitImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MeetingMenuButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Source="{StaticResource MeetingImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PaymentMenuButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Source="{StaticResource PaymentImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ************************************************************************************************************************************** -->
    <!-- Styles for rectangular buttons with only an image as content -->
    <Style x:Key="ImageRectangularButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource GradientButtonBackgroundBrush}" 
                            BorderBrush="{StaticResource GradientButtonBorderBrush}"
                            BorderThickness="1"
                            x:Name="border">
                        
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GradientButtonHighlightBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GradientButtonHighlightBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ********** Large buttons -->
    <Style x:Key="LargeImageRectangularButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageRectangularButtonBaseStyle}">
        <Setter Property="Height" Value="46" />
        <Setter Property="Width" Value="50" />
    </Style>

    <Style x:Key="LargeImageRectangularButtonImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="Width" Value="27" />
        <Setter Property="Height" Value="27" />
    </Style>

    <DataTemplate x:Key="LargeAddImageTemplate">
        <Image Style="{StaticResource LargeImageRectangularButtonImageStyle}" Source="{StaticResource AddImage}" />
    </DataTemplate>

    <DataTemplate x:Key="LargeEditImageTemplate">
        <Image Style="{StaticResource LargeImageRectangularButtonImageStyle}" Source="{StaticResource EditImage}" />
    </DataTemplate>

    <DataTemplate x:Key="LargeDeleteImageTemplate">
        <Image Style="{StaticResource LargeImageRectangularButtonImageStyle}" Source="{StaticResource DeleteImage}" />
    </DataTemplate>

    <DataTemplate x:Key="LargeCancelImageTemplate">
        <Image Style="{StaticResource LargeImageRectangularButtonImageStyle}" Source="{StaticResource CancelImage}" />
    </DataTemplate>

    <Style x:Key="LargeEditButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource LargeImageRectangularButtonBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource LargeEditImageTemplate}" />
    </Style>

    <Style x:Key="LargeDeleteButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource LargeImageRectangularButtonBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource LargeDeleteImageTemplate}" />
    </Style>

    <Style x:Key="LargeCancelButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource LargeImageRectangularButtonBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource LargeCancelImageTemplate}" />
    </Style>

    <Style x:Key="LargeTriggeredButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource LargeImageRectangularButtonBaseStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ModificationState}" Value="{x:Static misc:ModificationStates.Add}">
                <Setter Property="ContentTemplate" Value="{StaticResource LargeAddImageTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ModificationState}" Value="{x:Static misc:ModificationStates.Edit}">
                <Setter Property="ContentTemplate" Value="{StaticResource LargeEditImageTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ModificationState}" Value="{x:Static misc:ModificationStates.Delete}">
                <Setter Property="ContentTemplate" Value="{StaticResource LargeDeleteImageTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- ********** Small buttons -->
    <Style x:Key="SmallImageRectangularButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageRectangularButtonBaseStyle}">
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="25" />
    </Style>

    <Style x:Key="SmallImageRectangularButtonImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Width" Value="17" />
    </Style>

    <DataTemplate x:Key="SmallEditImageTemplate">
        <Image Style="{StaticResource SmallImageRectangularButtonImageStyle}" Source="{StaticResource EditImage}" />
    </DataTemplate>

    <DataTemplate x:Key="SmallDeleteImageTemplate">
        <Image Style="{StaticResource SmallImageRectangularButtonImageStyle}" Source="{StaticResource DeleteImage}" />
    </DataTemplate>

    <DataTemplate x:Key="SmallAddImageTemplate">
        <Image Style="{StaticResource SmallImageRectangularButtonImageStyle}" Source="{StaticResource AddImage}" />
    </DataTemplate>

    <DataTemplate x:Key="SmallExpandImageTemplate">
        <Image Style="{StaticResource SmallImageRectangularButtonImageStyle}" Source="{StaticResource ExpandImage}" />
    </DataTemplate>

    <DataTemplate x:Key="SmallCollapseImageTemplate">
        <Image Style="{StaticResource SmallImageRectangularButtonImageStyle}" Source="{StaticResource CollapseImage}" />
    </DataTemplate>

    <Style x:Key="SmallEditButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource SmallImageRectangularButtonBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource SmallEditImageTemplate}" />
    </Style>

    <Style x:Key="SmallDeleteButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource SmallImageRectangularButtonBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource SmallDeleteImageTemplate}" />
    </Style>

    <Style x:Key="SmallAddButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource SmallImageRectangularButtonBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource SmallAddImageTemplate}" />
    </Style>

    <Style x:Key="SmallExpandButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource SmallImageRectangularButtonBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource SmallExpandImageTemplate}" />
    </Style>

    <Style x:Key="SmallCollapseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource SmallImageRectangularButtonBaseStyle}">
        <Setter Property="ContentTemplate" Value="{StaticResource SmallCollapseImageTemplate}" />
    </Style>
    <!-- ************************************************************************************************************************************** -->


    <!-- Styles for buttons containing an image and some text as their content -->
    <Style x:Key="ImageAndTextButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="Height" Value="26" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource GradientButtonBackgroundBrush}" 
                            BorderBrush="{StaticResource GradientButtonBorderBrush}"
                            BorderThickness="1"
                            Padding="8,3"
                            x:Name="border">

                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="0,0,10,0" />

                            <TextBlock Style="{StaticResource StandardTextBlockStyle}"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{StaticResource GradientButtonForegroundBrush}"
                                       VerticalAlignment="Center"
                                       FontSize="12"
                                       Margin="0,0,0,1"/>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource GradientButtonHighlightBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource GradientButtonHighlightBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageAndTextButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Source="{StaticResource AddImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageAndTextButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Source="{StaticResource EditImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageAndTextButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Source="{StaticResource DeleteImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageAndTextButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Source="{StaticResource CancelImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalculateButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageAndTextButtonBaseStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Stretch="Uniform" Source="{StaticResource CalculateImage}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>